**Apuntes Generales HTML**

1. HTML (HyperText Markup Language) es el lenguaje de marcado estándar utilizado para crear la estructura y el contenido de las páginas web. Se encarga de definir la estructura de los elementos en una página web, como encabezados, párrafos, listas, enlaces, imágenes, formularios, entre otros.

2. La extensión de los archivos HTML es .html. Cuando creas un archivo HTML, puedes abrirlo en un navegador web para ver cómo se renderiza y se muestra el contenido.

3. HTML5 es la quinta versión del lenguaje de marcado HTML. 

4. Para poner comentarios en el html, se pone de la siguiente forma: 
<!-- This is a comment in HTML -->

5. La estructura básica se compone de lo siguiente:
    A. Lo primero que debe llevar el archivo html es el nodo:
        <!DOCTYPE html> que indica que el archivo es un documento HTML5.
    B. La declaración del inicio del documento es la siguiente:
        <html lang="es">
    C. El contenido raíz del código se divide en dos:
        - <head> que contiene información sobre el documento, como por ejemplo:
            a. el título 
            b. el autor
            c. el encabezado
            d. metadatos generales como:
                - <meta charset="utf-8"> el charset se usa como la codificación que se va a utilizar.
                - <meta name="viewport" content="width=device-width"> el viewport se usa para settear el ancho de la pantalla en base al dispositivo 
                - <meta name="robots" content="index, follow"> la etiqueta robots se usa principalmente para ayudar a los motores de búsqueda para que entiendan si debe indexarse la página y si se deben seguir los enlaces
                - <meta name"theme-color" content="codigo hexagonal del color a usar en la barra de arriba">
                - <link rel="icon" type="image/jpg" href="/images/icon.jpg"> este metadato tiene como propósito establecer el icono de la página en la pestaña de la misma, se usa el link en lugar del meta porque es un "atributo" que está indirectamente está siendo linkeado.
                - <meta name="description" content="Portfolio de Andrewdev, 1 año de experiencia como diseñador web y programador backend en Java"> este metadato es importante ya que brinda en la web la descripción de la página
                -  <style></style>Esta etiqueta tiene como fin generar estilos css
            e. Metadatos de Open Graph  
                -  <meta property="og:tittle" content="Portfolio de un diseñador y desarrollador Jr">
                -  <meta property="og:description" content="Portfolio de AndrewDev - Diseñador y Programador">
                -  <meta property="og:image" content="/images/yo.jpg">
                -  <meta property="og:image:alt" content="Imagen de AndrewDev">
                -  <link rel="alternate" href="https://andrew.dev/en" hreflang="en-US"> Esta etiqueta tiene como fin linkear una página externa, en este caso, hace la conexión a una página con el mismo contenido, excepto que ahora todo estaría en inglés de Estados Unidos.
                -  <link rel="canonical" href="https://andrew.dev" Esta etiqueta tiene como fin establecer cuál es la página original
        - <body> que contiene el contenido visible de la página web.



**Etiquetas**

1. En cuanto a las etiquetas de títulos, existen 6 niveles:
    a. h1
    b. h2
    c. h3
    d. h4
    e. h5
    f. h6

2. Para crear párrafos, tenemos que usar la etiqueta <p>Aquí va el contenido del párrafo</p>

**Elementos anidados**

1. El elemento <strong></strong> es usado para dar mayor relevancia a una o varias palabras en específico. Utilizado principalmente en títulos y párrafos.

2. El elemento <ul></ul> es usado para realizar listas desorganizadas (unordered list). Para añadir elementos a este elemento, usamos la etiqueta <li></li> que actúa como elemento de la lista (list item).

3. El elemento <em></em> también se usa para dar relevancia y/o enfasis a una  o varias palabras en específico. A diferencia del strong, este no solo las pone en negrita sino que también les da un estili en cursiva.

**Elementos reemplazables**
1. imágenes
2. input
3. br

Dato sobre los atributos: Las comillas en los atributos no son obligatorios, a no se que se tenga un espacio. Lo recomendable es siempre ponerlas.

**Atributos booleanos**
1. El atributo hidden tiene como función ocultar el elemento donde se agrega.

**Buenas prácticas**
1. Utiliza indentación adecuada para mejorar la legibilidad del código HTML.
2. Utiliza nombres de etiquetas y atributos descriptivos para facilitar el mantenimiento del código.
3. Evita el uso de estilos en línea y utiliza hojas de estilo externas para mantener el código más limpio y modular.
4. Utiliza comentarios para explicar el propósito y la funcionalidad de diferentes secciones de código.
5. Valida tu código HTML utilizando herramientas como el validador de W3C para asegurarte de que cumple con los estándares.
6. Utiliza etiquetas semánticas apropiadas, como <header>, <nav>, <main>, <section>, <article>, <footer>, para mejorar la accesibilidad y la estructura del contenido.
7. Evita el uso excesivo de tablas para el diseño de la página y utiliza CSS para lograr diseños más flexibles y responsivos.
8. Utiliza atributos alt en las etiquetas de imagen para proporcionar texto alternativo en caso de que la imagen no se cargue.
9. Evita el uso de etiquetas y atributos obsoletos o en desuso, como <font> o el atributo align.
10. Mantén el código HTML limpio y bien organizado, eliminando etiquetas o atributos innecesarios y evitando código redundante.

**Atributos globales**
1. id (solo puede existir una vez por página)
2. class

**Demás atributos**
1. src (fuente)
2. alt (texto alternativo)
3. rel="noreferrer" este atributo tiene como fin no compartir información de la página fuente como lo pueden ser tokens, contraseñas guardadas, entre otros datos que pueden resultar sensibles.

**MDN**
1. https://developer.mozilla.org/es/docs/Web/HTML

**HTML semántico**
1. article: se trata de una elemento que representa una información independiente contenida, es decir, si la información se saca/exporta a otro sitio, sigue teniendo sentido.

2. aside: Este elemento se utiliza para representar contenido que es complementario o no es esencial para el contenido principal de la página. Por lo general, se coloca junto al contenido principal y puede contener información adicional, como anuncios, enlaces relacionados, biografías del autor, etc. El contenido dentro de <aside> no debe ser crucial para la comprensión del contenido principal.

3. <section>: Este elemento se utiliza para agrupar contenido relacionado temáticamente. Puede contener encabezados, párrafos, listas u otros elementos HTML. La idea es que el contenido dentro de una sección tenga un propósito o tema común.

4. <nav>: Este elemento se utiliza para definir una sección de navegación en el documento. Se utiliza para agrupar enlaces que permiten la navegación dentro del sitio web. Por ejemplo, un menú de navegación principal o un menú de enlaces de pie de página.

5. <header>: Este elemento se utiliza para representar la cabecera de una sección o del documento en general. Puede contener elementos como el logotipo del sitio, el título de la página, el encabezado principal, etc.

6. <footer>: Este elemento se utiliza para representar el pie de página de una sección o del documento en general. Puede contener información de contacto, enlaces adicionales, derechos de autor, etc.

7. <main>: Este elemento se utiliza para representar el contenido principal de un documento. Debe haber solo un elemento <main> en todo el documento y se recomienda que esté ubicado dentro del elemento <body>. El contenido dentro de <main> debe ser único y relevante para el propósito principal del documento.

8. <figure> y <figcaption>: Estos elementos se utilizan para agrupar una imagen u otro contenido multimedia junto con su descripción. <figure> se utiliza para envolver el contenido multimedia, mientras que <figcaption> se utiliza para proporcionar una descripción o leyenda para ese contenido.

9. <time>: Este elemento se utiliza para representar una fecha o un tiempo. Puede ser utilizado para mostrar fechas de publicación, eventos, duraciones, etc. Se recomienda utilizar atributos adicionales como datetime para proporcionar información adicional sobre la fecha o el tiempo representado.

10. <details>: se utiliza para crear un elemento desplegable que muestra u oculta contenido adicional. Es especialmente útil cuando se desea proporcionar información adicional o detalles opcionales en una página web.

El elemento <details> debe contener dos elementos secundarios: <summary> y el contenido adicional que se mostrará u ocultará. El elemento <summary> se utiliza para proporcionar un título o una descripción breve del contenido oculto.

**Tipos de enlace**
1. Enlaces de página web: Se utilizan para enlazar a otras páginas web. Se crean utilizando la etiqueta <a> y el atributo href. Por ejemplo:
    <a href="https://www.example.com">Enlace a ejemplo.com</a>

2. Enlaces internos: Se utilizan para enlazar a secciones específicas dentro de la misma página web. Se crean utilizando la etiqueta <a> y el atributo href con el valor del ID del elemento al que se desea enlazar. Por ejemplo:
    <a href="#section1">Enlace a la sección 1</a>
    ...
    <h2 id="section1">Sección 1</h2>

3. Enlaces de correo electrónico: Se utilizan para crear enlaces que abren el cliente de correo electrónico del usuario con una dirección de correo electrónico predefinida. Se crean utilizando la etiqueta <a> y el atributo href con el valor "mailto:" seguido de la dirección de correo electrónico. Por ejemplo:
    <a href="mailto:info@example.com">Enviar correo electrónico</a>

4. Enlaces de descarga: Se utilizan para enlazar a archivos descargables. Se crean utilizando la etiqueta <a> y el atributo href con la ruta del archivo. Por ejemplo:
    <a href="/path/to/file.pdf" download>Descargar archivo PDF</a>

5. Enlaces de imagen: Se utilizan para enlazar a otras páginas web o archivos utilizando una imagen como enlace. Se crean utilizando la etiqueta <a> y el atributo href junto con la etiqueta <img> para mostrar la imagen. Por ejemplo:
    <a href="https://www.example.com">
      <img src="/path/to/image.jpg" alt="Descripción de la imagen">
    </a>

6. Enlaces de anclaje: Se utilizan para enlazar a un punto específico dentro de la misma página web utilizando un nombre de ancla. Se crean utilizando la etiqueta <a> y el atributo href con el valor del nombre de ancla precedido por "#". Por ejemplo:
    <a href="#top">Volver arriba</a>
    ...
    <h1 id="top">Contenido en la parte superior</h1>

7. Enlaces de llamada telefónica: Se utilizan para crear enlaces que permiten a los usuarios realizar una llamada telefónica directamente desde un dispositivo móvil. Se crean utilizando la etiqueta <a> y el atributo href con el valor "tel:" seguido del número de teléfono. Por ejemplo:
    <a href="tel:+1234567890">Llamar</a>

8. Enlaces de mensaje de WhatsApp: Se utilizan para crear enlaces que permiten a los usuarios enviar un mensaje de WhatsApp directamente desde un dispositivo móvil. Se crean utilizando la etiqueta <a> y el atributo href con el valor "https://wa.me/" seguido del número de teléfono con el código de país. Por ejemplo:
    <a href="https://wa.me/1234567890">Enviar mensaje de WhatsApp</a>

9. Enlaces de aplicación de correo electrónico: Se utilizan para abrir una aplicación de correo electrónico específica en un dispositivo móvil. Se crean utilizando la etiqueta <a> y el atributo href con el valor "mailto:" seguido del esquema de la aplicación de correo electrónico. Por ejemplo:
    <a href="mailto:info@example.com?subject=Consulta">Enviar correo electrónico</a>

10. Enlaces de aplicación de mensajería: Se utilizan para abrir una aplicación de mensajería específica en un dispositivo móvil. Se crean utilizando la etiqueta <a> y el atributo href con el valor del esquema de la aplicación de mensajería. Por ejemplo:
    <a href="whatsapp://send?text=Hola">Enviar mensaje de WhatsApp</a>


**Etiquetas video y audio**
1. <video>: se utiliza para insertar y reproducir videos en la página web. Ejemplo de cómo se ve la etiqueta:
<video src="/ruta/o/enlace/del/video" controls></video>

2. <audio>: se utiliza para insertar y reproducir archivos de audio en la página web. Ejemplo de cómo se ve la etiqueta:
<audio src="/ruta/o/enlace/del/audio" controls></audio>

Atributos adicionales que pueden tener las etiquetas <audio> y <video> son:

1. autoplay: Este atributo permite que el audio o video se reproduzca automáticamente cuando la página se carga. Por ejemplo:
    <video src="/ruta/o/enlace/del/video" autoplay></video>

2. controls: Este atributo muestra los controles de reproducción estándar (como el botón de reproducción, pausa, volumen, etc.) para el audio o video. Por ejemplo:
    <audio src="/ruta/o/enlace/del/audio" controls></audio>

3. loop: Este atributo indica que el audio o video debe reproducirse en bucle, es decir, una vez que llega al final, se reinicia automáticamente. Por ejemplo:
    <video src="/ruta/o/enlace/del/video" loop></video>

4. muted: Este atributo silencia el audio del video. Por ejemplo:
    <video src="/ruta/o/enlace/del/video" muted></video>

5. preload: Este atributo especifica cómo se debe cargar el audio o video cuando la página se carga. Los posibles valores son "auto" (cargar completamente el archivo), "metadata" (cargar solo los metadatos) y "none" (no cargar el archivo). Por ejemplo:
    <audio src="/ruta/o/enlace/del/audio" preload="auto"></audio>

6. poster: Este atributo especifica una imagen que se mostrará mientras el video se está cargando o antes de que se reproduzca. Por ejemplo:
    <video src="/ruta/o/enlace/del/video" poster="/ruta/o/enlace/de/imagen.jpg"></video>

7. width y height: Estos atributos especifican el ancho y alto del video en píxeles. Por ejemplo:
    <video src="/ruta/o/enlace/del/video" width="640" height="480"></video>

8. crossorigin: Este atributo especifica cómo se deben manejar las solicitudes de recursos cruzados (como archivos de audio o video alojados en un dominio diferente). Los posibles valores son "anonymous" (realizar solicitudes sin enviar cookies o credenciales) y "use-credentials" (enviar cookies o credenciales en las solicitudes). Por ejemplo:
    <audio src="/ruta/o/enlace/del/audio" crossorigin="anonymous"></audio>

Estos son algunos de los atributos adicionales que se pueden utilizar con las etiquetas <audio> y <video>.




**Apuntes Generales CSS**

En cuanto a los selectores, podemos encontrar y usar dos de los más típicos:

1. class:"selector-de-tipo-clase"
    Ejemplo de uso:
    .selector-de-tipo-clase{
        background: #fff;
        color: rojo;
    }

2. id:"selector-de-tipo-id"
    Ejemplo de uso: 
    #selector-de-tipo-clase{
        background: #fff;
        color: rojo;
    }
**Valores especiales de la herencia**
    1. inherit: Hereda el valor de la propiedad del elemento padre. Si el padre no tiene un valor establecido, se hereda del abuelo, y así sucesivamente.
    Ejemplo: color: inherit; hereda el color del elemento padre.

    2. initial: Establece la propiedad a su valor inicial, es decir, el valor predeterminado del navegador.
    Ejemplo: color: initial; establece el color en el valor predeterminado del navegador, que es usualmente negro.

    3. unset: Si la propiedad se hereda del padre, se hereda el valor. Si no se hereda, se establece en su valor inicial.
    Ejemplo: color: unset; hereda el color del padre si se hereda, de lo contrario, se establece en el valor predeterminado del navegador.

    4. revert: Establece la propiedad en su valor predeterminado, como si no se hubiera establecido nunca en el árbol de elementos.
    Ejemplo: color: revert; establece el color en su valor predeterminado, como si no se hubiera establecido nunca en el árbol de elementos.

*Pseudoclases de estado*
    :active: Selecciona el elemento cuando se encuentra en un estado activo (por ejemplo, cuando se hace clic en un enlace).

    :hover: Selecciona el elemento cuando se pasa el cursor del mouse sobre él.
    
    :focus: Selecciona el elemento cuando tiene el foco (por ejemplo, cuando se selecciona un campo de formulario).

    :visited: Selecciona los enlaces que han sido visitados anteriormente.

    :link: Selecciona los enlaces que no han sido visitados anteriormente.
    
*Pseudoclases de estructura*
    :first-child: Selecciona el primer elemento hijo de un padre.
    
    :last-child: Selecciona el último elemento hijo de un padre.
    
    :nth-child(n): Selecciona el enésimo elemento hijo de un padre (donde n es un número).
    
    :nth-last-child(n): Selecciona el enésimo elemento hijo de un padre, empezando desde el final (donde n es un número).
    
    :only-child: Selecciona el elemento que es el único hijo de un padre.
    
    :first-of-type: Selecciona el primer elemento de un tipo específico (por ejemplo, el primer <p>).
    
    :last-of-type: Selecciona el último elemento de un tipo específico (por ejemplo, el último <p>).
    
    :nth-of-type(n): Selecciona el enésimo elemento de un tipo específico (donde n es un número).
    
    :nth-last-of-type(n): Selecciona el enésimo elemento de un tipo específico, empezando desde el final (donde n es un número).
    
    :only-of-type: Selecciona el elemento que es el único de su tipo.

*Pseudoclases de contenido*
    :empty: Selecciona los elementos que no tienen contenido (ni texto ni elementos hijos).

    :lang(language): Selecciona los elementos que tienen el idioma especificado.

*Pseudoclases de UI*

    :enabled: Selecciona los elementos que están habilitados.

    :disabled: Selecciona los elementos que están deshabilitados.

    :checked: Selecciona los elementos que están seleccionados (por ejemplo, casillas de verificación o radios).

    :indeterminate: Selecciona los elementos que tienen un estado indeterminado (por ejemplo, una casilla de verificación que no está seleccionada ni deseleccionada).

*Operador de afectación por primer nivel*
>: este operador tiene como función identificar el/los elementos hijos de nivel directo.
    Ejemplo: 
    Código HTML:
        <article>
            <p>Este es el contenido</p>
            <p>Este es otro texto</p>
        
            <footer>
                <p>Este es otro texto</p>
            </footer>

            <p>Este es el último texto</p>

        </article>

    Código CSS:
    article{
        font-size: 20px;
    }
    
    article > p {
        color: blue;
    }

En el anterior código se evidencia la funcionalidad del operador ">" en el código CSS. Esto identificará los elementos hijos de nivel directo en cuanto a la etiqueta señalada. Tomará y cambiará el color del texto a azul a todos los elementos "p" exceptuando al footer debido a que este no es un hijo de primer nivel.


*Operador de afectación por segundo nivel*
~: este operador tiene como función identificar los elementos hijos de segundo nivel, es decir que afecta a los elementos según sean indicados siempre y cuando se cumpla el segundo nivel.
    Ejemplo:
        Código HTML:
            <article>
                <span> Esto queda en negro</span>
                <p>Párrafo 1</p>
                <span>Esto está en rojo porque aparece después de la p</span>
                <p>Whatever it may be, keep smiling</p>
                <h1>Dream big</h1>
                <span>Doesn't matter how many or what kind of nodes are in between, all spans froont the same parent 
                after a paragraph are red</span>
            </article>
                <span>This span is not red because it doesn't share a parent with paragraph</span>

        Código CSS:
            p ~ span{
                color: red;
            }
Este código tiene como finalidad estilar de color rojo todos los span que estén después de un párrafo.

*Operador de afectación inmediatamente después*
+ : este operador tiene como función identificar los elementos hijos de nivel directo.
    Ejemplo:
        Código HTML:
            <p>Hola</p>
            <span>This span is red beacuse it's sharing a directly parent with a paragraph</span>
        Código CSS:
            p + span{
                color: red;
            }
Este código tiene como finalidad estilar de color rojo el/los elementos de nivel directo.

        
        
        
        
        